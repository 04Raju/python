# -*- coding: utf-8 -*-
"""Introduction to Python

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sl6Zje8OCEVYLuD5K6J8AJQxoCRGan7V

##1.1 Understanding Python-identifiers, variables, keywords, expressions and statements.

The first program
"""

print ("Hello, World!")

"""The quotation marks in the program mark the beginning and end of the value;
they don't appear in the result.

Python 2 and 3
"""

print "Hello, World!"

"""#Values and types"""

print (4)

"""The print statement also works for integers. If you are not sure what type a value has, the interpreter can tell you."""

type("Hello, World!")

type(17)

type(3.2)

print (1,000,000)

"""Python interprets 1,000,000 as a
comma-separated list of three integers, which it prints consecutively.
"""

message = "What's up, Doc?"

n = 17

pi = 3.14159

"""#Variables

The print statement also works with variables.
"""

print (message)

print (n)

print(pi)

type(message)

type(n)

type(pi)

"""#Variable names

If you give a variable an illegal name, you get a syntax error:
"""

76trombones = "big parade"

more$ = 1000000

class = "Computer Science 101"

"""76trombones is illegal because it does not begin with a letter. more$ is illegal
because it contains an illegal character, the dollar sign. But what's wrong with
class?
It turns out that class is one of the Python keywords.

#Statements

When you type a statement on the command line, Python executes it and
displays the result, if there is one.
Script usually contains a sequence of statements. If there is more than one
statement, the results appear one at a time as the statements execute.
"""

print (1)
x = 2
print (x)

"""#Evaluating expressions"""

1 + 1

17

x

"""Confusingly, evaluating an expression is not quite the same thing as printing a
value.
"""

message = "What's up, Doc?"

message

print (message)

"""When the Python interpreter displays the value of an expression, it uses the
same format you would use to enter a value.

In the case of strings, that means
that it includes the quotation marks. But if you use a print statement, Python
displays the contents of the string without the quotation marks.
"""